----------------------------------------------------------------------------
function GetSelectedSymbol: integer;
begin
    -- DisplayStatus("Pos: " + IntegerToString(g_TopArrowPosition + g_LeftArrowPosition + 1, 0));
    -- ProgramDelay(150);
    return g_TopArrowPosition + g_LeftArrowPosition + 1;
end;
----------------------------------------------------------------------------
function IsSymbolPlayable(symbolId: integer): integer;
begin
    if (g_arrPlayer1Symbols[symbolId] = TRUE
        or g_arrPlayer2Symbols[symbolId] = TRUE) then
        -- DisplayStatus("Sym " + IntegerToString(symbolId, 0) + " is not playable");
        -- ProgramDelay(150);
        return FALSE;
    end if;
    -- DisplayStatus("Sym " + IntegerToString(symbolId, 0) + " is playable");
    -- ProgramDelay(150);
    return TRUE;
end;
----------------------------------------------------------------------------
procedure StoreSelectedSymbol(playerNumber: integer);
begin
    if (playerNumber = 1) then
        g_arrPlayer1Symbols[g_SelectedSymbol] := TRUE;
        -- DisplayStatus("Sym " + IntegerToString(g_SelectedSymbol, 0) + " played by player 1");
        -- ProgramDelay(150);
    elsif (playerNumber = 2) then
        g_arrPlayer2Symbols[g_SelectedSymbol] := TRUE;
        -- DisplayStatus("Sym " + IntegerToString(g_SelectedSymbol, 0) + " played by player 2");
        -- ProgramDelay(150);
    end if;
end;
----------------------------------------------------------------------------
procedure DrawSelectedSymbol(playerNumber: integer);
    symbolId: integer;
begin
    if (playerNumber = 1) then
        symbolId := STARTING_CIRCLE_ID + g_SelectedSymbol - 1;
    elsif (playerNumber = 2) then
        symbolId := STARTING_SQUARE_ID + g_SelectedSymbol - 1;
    end if;

    SetSymbolState(symbolId, DEFAULT_STATE);
end;
----------------------------------------------------------------------------